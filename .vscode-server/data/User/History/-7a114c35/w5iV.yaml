AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  LambdaRequestAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: authorizer.handler
      Timeout: 30
      Runtime: nodejs8.10
      CodeUri: ./
      Policies:
        - AWSLambdaFullAccess
        - CloudWatchLogsFullAccess

  MyLambdaRouteHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Timeout: 30
      Runtime: nodejs18.x
      CodeUri: ./
      Policies:
        - AWSLambda_FullAccess
        - CloudWatchLogsFullAccess
        - AmazonAPIGatewayInvokeFullAccess
        - AmazonAPIGatewayAdministrator

  MyWebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MyWebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  Auth:
    Type: "AWS::ApiGatewayV2::Authorizer"
    Properties:
      Name: My-Authorizer
      ApiId: !Ref MyWebSocketApi
      AuthorizerType: REQUEST
      AuthorizerUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaRequestAuthFunction.Arn}/invocations
      IdentitySource:
        - "route.request.header.x-some-header-to-auth-from"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MyWebSocketApi
      RouteKey: "$connect"
      AuthorizationType: CUSTOM
      OperationName: ConnectRoute
      AuthorizerId: !Ref Auth

  TestRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MyWebSocketApi
      RouteKey: test
      AuthorizationType: NONE
      OperationName: TestRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref TestLambdaIntegration
  TestLambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref MyWebSocketApi
      Description: Test Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaRouteHandlerFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - TestRoute
    Properties:
      ApiId: !Ref MyWebSocketApi

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: v1
      Description: Version 1 'stage'
      DeploymentId: !Ref Deployment
      ApiId: !Ref MyWebSocketApi

  PortfolioBlocksPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - MyWebSocketApi
      - MyLambdaRouteHandlerFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MyLambdaRouteHandlerFunction
      Principal: apigateway.amazonaws.com

  AuthorizerFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - MyWebSocketApi
      - LambdaRequestAuthFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaRequestAuthFunction
      Principal: apigateway.amazonaws.com